<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop 
    	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">

	<context:component-scan base-package="com.exist.web.controllers"/>
	
	<!-- freemarker config --> 
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/"/>
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true"/>
		<property name="prefix" value=""/>
		<property name="suffix" value=".ftl"/>
		<property name="requestContextAttribute" value="ctx"/>
	</bean> 
		
	<mvc:resources mapping="/resources/**" location="/resources/" />
		
	<mvc:annotation-driven />
	
		
	<!-- AOP config -->
	<aop:aspectj-autoproxy/>
	
	<bean id="logging" class="com.exist.utility.Logging"/> 

	
	<!-- services -->
	<bean id="personService" class="com.exist.service.PersonService">
		<constructor-arg ref="personDao" />
    </bean>
	
	<bean id="roleService" class="com.exist.service.RoleService">
		<constructor-arg ref="roleDao" />
    </bean>

	<!-- daos -->
	<bean id="roleDao" class="com.exist.dao.RoleDao">
		<constructor-arg ref="sessionUtil" />
    </bean>

    <bean id="personDao" class="com.exist.dao.PersonDao">
		<constructor-arg ref="sessionUtil" />
    </bean>

    <!-- session factory -->
	<bean id="sessionUtil" class="com.exist.utility.SessionUtil">
		<constructor-arg ref="sessionFactory" />
    </bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>com.exist.model.Person</value>
                <value>com.exist.model.Contact</value>
                <value>com.exist.model.Role</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
				<prop key="hibernate.cache.provider_class">com.zaxxer.hikari.hibernate.HikariConnectionProvider</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
            </props>
        </property>
    </bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
    	<constructor-arg ref="hikariConfig" />
	</bean>
	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/postgres"/>
		<property name="username" value="postgres"/>
		<property name="password" value="root"/>
		<property name="poolName" value="springHikariCP" />
    	<property name="connectionTestQuery" value="SELECT 1" />
    	<property name="dataSourceClassName" value="org.postgresql.ds.PGSimpleDataSource" />
    	<property name="maximumPoolSize" value="10" />
    	<property name="idleTimeout" value="30000" />
	</bean>
</beans>